<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>devon.boot</groupId>
	<artifactId>devon-boot-project</artifactId>
	<version>1.1</version>
	<packaging>pom</packaging>
	<description>DevOn Boot Build</description>

	<!-- scm info -->
	<scm>
		<url>scm:git:https://wire.lgcns.com/bitbucket/scm/devonframe/devon-boot.git</url>
		<connection>scm:git:https://wire.lgcns.com/bitbucket/scm/devonframe/devon-boot.git</connection>
		<developerConnection>scm:git:https://wire.lgcns.com/bitbucket/scm/devonframe/devon-boot.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>devon.boot</groupId>
				<artifactId>devon-boot-dependencies</artifactId>
				<version>1.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<properties>
	
		<!-- main library version -->
		<devon.boot.revision>1.1</devon.boot.revision>
		<devonframe.revision>1.9.2</devonframe.revision>
		<spring.boot.revision>2.3.1.RELEASE</spring.boot.revision>

		<!-- mybatis -->
		<mybatis.spring.version>2.0.0</mybatis.spring.version>
		
		<!-- etc -->
		<xplatform.xapi.version>1.0</xplatform.xapi.version>
		<nexacro.xapi.version>1.0</nexacro.xapi.version>

		<rhino.version>1.7R2</rhino.version>
		<r2dbc.version>0.8.3.RELEASE</r2dbc.version>

		<!-- build version -->
		<disable.checks>false</disable.checks>
		<java.version>1.8</java.version>
		<encoding>UTF-8</encoding>

		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

		<!-- skip settings. use 'mvn -Dmaven.test.skip=true install' to skip testcase -->
		<maven.test.skip>false</maven.test.skip>
		<maven.javadoc.skip>false</maven.javadoc.skip>
		<maven.proguard.skip>false</maven.proguard.skip>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<maven.version>3.5.4</maven.version>
		<maven-resolver.version>1.1.1</maven-resolver.version>
		<spock.version>1.0-groovy-2.4</spock.version>
		<testcontainers.version>1.10.6</testcontainers.version>
		<dependency-management-plugin.version>1.0.6.RELEASE</dependency-management-plugin.version>

		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>

		<!-- scm url -->
		<project.scm.developerConnection>scm.url</project.scm.developerConnection>

		<!-- Jacoco and Sonar config properties -->
		<jacoco.version>0.8.4</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

		<sonar.language>java</sonar.language>
		<sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>
		<!-- <sonar.skippedModules>mySikppedModule1,mySkippedModule2</sonar.skippedModules> -->

		<jacoco.outputDir>${basedir}/target</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>

		<!-- obfuscate -->
		<version.net.sf.proguard>6.1.1</version.net.sf.proguard>
		<version.proguard.maven.plugin>2.1.0</version.proguard.maven.plugin>
	</properties>

	<modules>
		<module>devon-boot</module>
		<module>devon-boot-dependencies</module>
		<module>devon-boot-parent</module>
		<module>devon-boot-autoconfigure</module>
		<module>devon-boot-log4j2</module>
		<module>devon-boot-tester</module>

		<module>devon-boot-thymeleaf</module>
		<module>devon-boot-rui</module>

		<module>devon-boot-starter</module>
		<module>devon-boot-starter-log4j2</module>
		<module>devon-boot-starter-thymeleaf</module>
		<module>devon-boot-starter-rui</module>
	</modules>

	<repositories>
		<repository>
			<id>devon-repository</id>
			<name>DevOn Framework Repository</name>
			<layout>default</layout>
			<url>http://www.dev-on.com/devon_framework/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>devon-public-repository</id>
			<name>DevOn Framework Public Repository</name>
			<layout>default</layout>
			<url>http://www.dev-on.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring</id>
			<url>http://repo.spring.io/plugins-release</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>devon-repository</id>
			<name>DevOn Framework Repository</name>
			<layout>default</layout>
			<url>http://www.dev-on.com/devon_framework/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>devon-public-repository</id>
			<name>DevOn Framework Public Repository</name>
			<layout>default</layout>
			<url>http://www.dev-on.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>spring</id>
			<url>http://repo.spring.io/plugins-release</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- Profiles -->
	<profiles>
		<profile>
			<id>private</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.proguard.outjar>${project.build.finalName}_obfuscated.jar</build.proguard.outjar>
			</properties>
			<distributionManagement>
				<repository>
					<id>devon-repository</id>
					<name>DevOn Framework Public Repository</name>
					<url>http://www.dev-on.com/devon_framework/nexus/content/repositories/releases</url>
				</repository>
				<snapshotRepository>
					<id>devon-repository</id>
					<name>DevOn Framework Public Repository(snapshot)</name>
					<url>http://www.dev-on.com/devon_framework/nexus/content/repositories/snapshots</url>
					<uniqueVersion>true</uniqueVersion>
				</snapshotRepository>
			</distributionManagement>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.3</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>

					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>public</id>
			<activation>
				<property>
					<name>public</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<build.proguard.outjar>${project.build.finalName}.jar</build.proguard.outjar>
			</properties>
			<distributionManagement>
				<repository>
					<id>devon-public-repository</id>
					<name>DevOn Framework Public Repository</name>
					<url>http://www.dev-on.com/nexus/content/repositories/releases</url>
				</repository>
				<snapshotRepository>
					<id>devon-public-repository</id>
					<name>DevOn Framework Public Repository(snapshot)</name>
					<url>http://www.dev-on.com/nexus/content/repositories/snapshots</url>
					<uniqueVersion>true</uniqueVersion>
				</snapshotRepository>
			</distributionManagement>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.codehaus.sonar-plugins.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar.plugins</groupId>
			<artifactId>sonar-surefire-plugin</artifactId>
			<version>3.3.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- TODO: Build 수정 -->
	<build>
		<defaultGoal>clean install</defaultGoal>
		<directory>${basedir}/target</directory>
		<finalName>${project.name}-${project.version}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${encoding}</encoding>
					<maxmem>512m</maxmem>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<skipTests>${maven.test.skip}</skipTests>
					<encoding>${encoding}</encoding>
					<reportFormat>xml</reportFormat>
					<argLine>-Dfile.encoding=${encoding} ${jacoco.agent.ut.arg}
						-Duser.language=ko -Xms512m -Xmx1024m</argLine>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<reportsDirectory>${jacoco.outputDir}/surefire-reports</reportsDirectory>
				</configuration>
			</plugin>
			<!-- failsafe -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<encoding>${encoding}</encoding>
					<!-- <argLine>-Duser.language=ko</argLine> -->
					<argLine>-Dfile.encoding=${encoding} -Xms512m -Xmx1024m
						-Duser.language=ko ${jacoco.agent.it.arg}</argLine>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<reportsDirectory>${jacoco.outputDir}/surefire-reports</reportsDirectory>
				</configuration>
				<executions>
					<!-- <execution> <goals> <goal>integration-test</goal> <goal>verify</goal> 
						</goals> </execution> -->
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.revision}</version>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<!-- <execution> <id>default-prepare-agent</id> <goals> <goal>prepare-agent</goal> 
						</goals> </execution> <execution> <id>agent</id> <goals> <goal>prepare-agent</goal> 
						</goals> </execution> -->
					<execution>
						<id>prepare-ut-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.agent.ut.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>prepare-it-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- <goal>prepare-agent-integration</goal> -->
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.agent.it.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${sonar.jacoco.reportPath}</dataFile>
						</configuration>
					</execution>
					<execution>
						<id>integration-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${sonar.jacoco.itReportPath}</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Java Doc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-aggregate</id>
						<phase>package</phase>
						<goals>
							<goal>aggregate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<javadocVersion>${java.version}.0</javadocVersion>
					<aggregate>true</aggregate>
					<additionalparam>-Xdoclint:none</additionalparam>
					<additionalDependencies>
						<additionalDependency>
							<groupId>javax.annotation</groupId>
							<artifactId>jsr250-api</artifactId>
							<version>1.0</version>
						</additionalDependency>
					</additionalDependencies>
					<doclint>none</doclint>
					<docencoding>${encoding}</docencoding>
					<charset>${encoding}</charset>
					<encoding>${encoding}</encoding>

					<doctitle><![CDATA[DevOnBoot<sup>TM</sup> Core API Specification]]></doctitle>
					<header><![CDATA[DevOnBoot<sup>TM</sup> Core]]></header>
					<bottom><![CDATA[<span style="font-size:smaller;">Copyright &copy; LG CNS, Inc. All rights reserved.</span>]]></bottom>
					<groups>
						<group>
							<title>devon-boot</title>
							<packages>devonboot.*</packages>
						</group>
					</groups>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>${version.proguard.maven.plugin}</version>
				<executions>
					<execution>
						<id>obfuscation-packaging</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
						<configuration>
							<proguardVersion>${version.net.sf.proguard}</proguardVersion>
							<obfuscate>true</obfuscate>
							<skip>${maven.proguard.skip}</skip>
							<injar>${project.build.finalName}.jar</injar>
							<injarNotExistsSkip>true</injarNotExistsSkip>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<outjar>${build.proguard.outjar}</outjar>
							<proguardInclude>${project.artifactId}.pro</proguardInclude>
							<addMavenDescriptor>true</addMavenDescriptor>
							<libs>
								<lib>${java.home}/lib/rt.jar</lib>
								<lib>${java.home}/lib/jce.jar</lib>
							</libs>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>${version.net.sf.proguard}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
				<configuration>
					<skip>${maven.site.skip}</skip>
					<skipDeploy>true</skipDeploy>
				</configuration>
				<executions>
					<execution>
						<id>attach-site</id>
						<phase>package</phase>
						<goals>
							<goal>site</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Ant task run (Javadoc zipping) -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>archive-javadocandsite</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<!-- <echo message="build directory : ${project.build.directory}/site/apidocs" 
									/> <echo message="basedir : ${basedir}/site/apidocs" /> <echoproperties prefix="org" 
									/> -->
								<taskdef
									resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath" />
								<if>
									<available
										file="${project.build.directory}/site/apidocs" />
									<then>
										<echo
											message="found aggregated javadoc : ${project.build.directory}/site/apidocs" />
										<zip
											zipfile="${basedir}/devonboot-${devon.boot.revision}-api.zip"
											basedir="${project.build.directory}/site/apidocs" />
										<echo message="Success #1" />
									</then>
								</if>
								<if>
									<equals arg1="${project.artifactId}" arg2="devon-boot" />
									<then>
										<echo
											message="archive aggregated site : ${project.build.directory}/site >> ${basedir}/devonboot-${devon.boot.revision}-site.zip" />
										<zip
											destfile="${basedir}/devonboot-${devon.boot.revision}-site.zip"
											basedir="${project.build.directory}/site" />
										<echo message="Success #2" />
									</then>
									<else>
										<echo
											message="update archive aggregated site : ${project.build.directory}/site >> ${basedir}/../devonboot-${devon.boot.revision}-site.zip" />
										<zip
											destfile="${basedir}/../devonboot-${devon.boot.revision}-site.zip"
											update="true">
											<zipfileset dir="${project.build.directory}/site"
												prefix="${project.artifactId}" />
										</zip>
										<echo message="Success #3" />
									</else>
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-shared-jar</artifactId>
						<version>1.2</version>
						<exclusions>
							<exclusion>
								<groupId>com.google.code.findbugs</groupId>
								<artifactId>bcel-findbugs</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.bcel</groupId>
						<artifactId>bcel</artifactId>
						<version>6.2</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<!-- <reportSets> <reportSet> <reports> <report>index</report> <report>licenses</report> 
					<report>dependency-info</report> </reports> </reportSet> </reportSets> -->
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>